# -----------------------------------------------------------
# 유튜브 소놀코딩 파이썬 중급강의 9강 '클래스변수와 인스턴스 변수'

# 인스턴스 변수
class Person:
    def __init__(self, sp):
        self.li = []  # 이것이 인스턴스 변수의 선언
        self.li.append(sp)

    def disp(self):
        print(self.li)


p1 = Person('우유')
p1.disp()  # ['우유']
p2 = Person('콜라')
p2.disp()  # ['콜라']
p3 = Person('주스')
p3.disp()  # ['주스']


# 클래스 변수
class Person:
    li = []

    def __init__(self, sp):
        Person.li.append(sp)  # 주의: 함수단이 아닌 클래스단에 li를 선언했기 때문에 Person.li로 접근

    def disp(self):
        print(Person.li)


p1 = Person('우유')
p1.disp()  # ['우유']
p2 = Person('콜라')
p2.disp()  # ['우유', '콜라']
p3 = Person('주스')
p3.disp()  # ['우유', '콜라', '주스']

# 왜 인스턴스 변수 때처럼 나오지 않고 누적 형태적 나오는 것일까?
# li를 클래스 변수로 선언하면 각각의 객체들(p1, p2, p3)이 공유하는 변수이기 때문이다.

# 초기자 속에 변수를 선언하면 인스턴스 변수가 되어 각각의 리스트가 된다.
# 즉 인스턴스 속에서만 공유되는 값으로, 또 다른 인스턴스(p1, p2, p3)를 선언했을 때 각 객체끼리 공유되지는 않는다.

# (나의 생각) 마치 스레드와 프로세스에서 배운 개념과 비슷하다고 느껴진다. 하지만 그 내막은 분명히 또 다른 알고리즘이 존재하겠지!!
